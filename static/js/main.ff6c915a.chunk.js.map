{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsConstanse.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["uploadContacts","createAction","addContact","payload","name","number","id","uuidv4","filterContact","event","target","value","deleteContact","comboDispatchFunc","ContactForm","state","handleChange","currentTarget","setState","handleSubmit","preventDefault","console","log","props","contacts","some","contact","toLowerCase","checkContact","onSubmit","alert","JSON","parse","localStorage","getItem","this","dbUploadContacts","error","prevProps","prevState","setItem","stringify","className","styles","form","label","type","pattern","title","required","input","onChange","button","handleAddContact","Component","connect","dispatch","filter","filter_wrap","filter_title","filter_input","includes","onRemoveContact","contactId","contactActions","list","map","item","delete_btn","onClick","App","contactsItem","createReducer","contactsFilter","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ff6c915a.chunk.js","sourcesContent":["// import { db } from \"../../db/request\";\r\nimport {\r\n  UPLOADCONTACTS,\r\n  ADDCONTACT,\r\n  FILTERCONTACT,\r\n  DELETECONTACT,\r\n} from \"./contactsConstanse\";\r\n\r\nimport { combineReducers, createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// const uploadContacts = (contacts) => ({\r\n//   type: UPLOADCONTACTS,\r\n//   payload: contacts,\r\n// });\r\n\r\nexport const uploadContacts = createAction(UPLOADCONTACTS);\r\n\r\n// const addContact = (contact) => {\r\n//   return {\r\n//     type: ADDCONTACT,\r\n//     payload: {\r\n//       id: contact.id,\r\n//       name: contact.name,\r\n//       number: contact.number,\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport const addContact = createAction(ADDCONTACT, ({ name, number }) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\n// const filterContact = (value) => {\r\n//   return {\r\n//     type: FILTERCONTACT,\r\n//     payload: value,\r\n//   };\r\n// };\r\n\r\nexport const filterContact = createAction(FILTERCONTACT, (event) => ({\r\n  payload: event.target.value,\r\n}));\r\n\r\n// const deleteContact = (id) => {\r\n//   return {\r\n//     type: DELETECONTACT,\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\nexport const deleteContact = createAction(DELETECONTACT);\r\n\r\nconst comboDispatchFunc = {\r\n  uploadContacts,\r\n  addContact,\r\n  filterContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default comboDispatchFunc;\r\n","const UPLOADCONTACTS = \"contacts/uploadContacts\";\r\nconst ADDCONTACT = \"contact/addContact\";\r\nconst FILTERCONTACT = \"contact/filterContact\";\r\nconst DELETECONTACT = \"contact/deleteContact\";\r\n\r\nexport { UPLOADCONTACTS, ADDCONTACT, FILTERCONTACT, DELETECONTACT };\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactActions from \"../../redux/contacts/contactsActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport comboDispatchFunc from \"../../redux/contacts/contactsActions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n      if (contacts) {\r\n        this.props.dbUploadContacts(contacts);\r\n      }\r\n    } catch (error) {}\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.contacts !== prevProps.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\r\n    }\r\n    console.log(prevProps);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    console.log(this.state);\r\n\r\n    const checkContact = (name) => {\r\n      const { contacts } = this.props;\r\n      // const normalizeName = name.toLowerCase();\r\n      return contacts.some(\r\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n      );\r\n    };\r\n\r\n    if (checkContact(name)) {\r\n      alert(`Contact with name \"${name}\" already in base`);\r\n      return;\r\n    }\r\n\r\n    // const newContact = {\r\n    //   name: name,\r\n    //   number: number,\r\n    //   id: uuidv4(),\r\n    // };\r\n\r\n    this.props.onSubmit({ name, number });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={styles.input}\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label className={styles.label}>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          className={styles.input}\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button\r\n          className={styles.button}\r\n          type=\"submit\"\r\n          onSubmit={this.handleAddContact}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dbUploadContacts: (contacts) =>\r\n    dispatch(comboDispatchFunc.uploadContacts(contacts)),\r\n  onSubmit: (contact) => dispatch(comboDispatchFunc.addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport comboDispatchFunc from \"../../redux/contacts/contactsActions\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, filterContact }) => {\r\n  // console.log(filter);\r\n  // console.log(filterContact);\r\n  return (\r\n    <div className={styles.filter_wrap}>\r\n      <p className={styles.filter_title}>Find contacts by name</p>\r\n      <input\r\n        className={styles.filter_input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={filterContact}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  filterContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ filter }) => {\r\n  return (\r\n    console.log(filter),\r\n    {\r\n      filter: filter,\r\n    }\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filterContact: (event) => dispatch(comboDispatchFunc.filterContact(event)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactActions from \"../../redux/contacts/contactsActions\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact, uploadContacts }) => {\r\n  console.log(contacts);\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ name, id, number }) => {\r\n        return (\r\n          <li className={styles.item} key={id}>\r\n            {name + \" : \" + number}\r\n            <button\r\n              className={styles.delete_btn}\r\n              onClick={() => onRemoveContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { contacts, filter } = state.contacts;\r\n//   const normalizeFilter = filter.toLowerCase();\r\n//   const getFilteredContacts = contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizeFilter)\r\n//   );\r\n//   return {\r\n//     contacts: getFilteredContacts,\r\n//   };\r\n// };\r\n// const mapStateToProps = ({ contacts, filter }) => {\r\n//   const normalizeFilter = filter.toLowerCase();\r\n//   const getFilteredContacts = contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizeFilter)\r\n//   );\r\n//   return {\r\n//     contacts: getFilteredContacts,\r\n//   };\r\n//////==|or|==///////\r\n// return {\r\n//   contacts: contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\r\n//   ),\r\n// };\r\n// };\r\n// };\r\n\r\nconst mapStateToProps = ({ contacts, filter }) => ({\r\n  contacts: contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onRemoveContact: (contactId) =>\r\n    dispatch(contactActions.deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\n// import { v4 as uuidv4 } from \"uuid\";\n\nimport \"./App.css\";\n\nexport const App = () => {\n  return (\n    <div className=\"wrap\">\n      <div className=\"section\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm />\n      </div>\n      <div className=\"section\">\n        <h2 className=\"title\">Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n// }\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\n\r\n// import {\r\n//   UPLOADCONTACTS,\r\n//   ADDCONTACT,\r\n//   FILTERCONTACT,\r\n//   DELETECONTACT,\r\n// } from \"./contactsConstanse\";\r\n// import contactsBase from \"../../data/contactBase.json\";\r\n\r\n// const contactsItem = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case UPLOADCONTACTS:\r\n//       return payload;\r\n\r\n//     case ADDCONTACT:\r\n//       // console.log(payload);\r\n//       return [...state, payload];\r\n\r\n//     case DELETECONTACT:\r\n//       return state.filter((contact) => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  uploadContacts,\r\n  filterContact,\r\n} from \"./contactsActions\";\r\nconst contacts = localStorage.getItem(\"contacts\");\r\nconst contactsItem = createReducer([], {\r\n  [addContact]: (state, { payload }) => {\r\n    console.log(payload);\r\n    return [...state, payload];\r\n  },\r\n  [uploadContacts]: (state, { payload }) => payload,\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst contactsFilter = createReducer(\"\", {\r\n  [filterContact]: (state, { payload }) => payload,\r\n});\r\n//   switch (type) {\r\n//     case FILTERCONTACT:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst contactsReducer = combineReducers({\r\n  contacts: contactsItem,\r\n  filter: contactsFilter,\r\n});\r\n\r\nexport { contactsReducer };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { contactsReducer } from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./styles/main.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1hwPP\",\"label\":\"ContactForm_label__h_9wi\",\"input\":\"ContactForm_input__2noqa\",\"button\":\"ContactForm_button__1CSPF\",\"buttonfocus\":\"ContactForm_buttonfocus__2GbP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_wrap\":\"Filter_filter_wrap__K9-9p\",\"filter_title\":\"Filter_filter_title__1whGG\",\"filter_input\":\"Filter_filter_input__CFPPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__oImRy\",\"item\":\"ContactList_item__3-ipm\",\"delete_btn\":\"ContactList_delete_btn__2sXs2\"};"],"sourceRoot":""}